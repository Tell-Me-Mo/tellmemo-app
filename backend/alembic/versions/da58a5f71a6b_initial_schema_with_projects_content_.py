"""Initial schema with projects, content, summaries, and queries tables

Revision ID: da58a5f71a6b
Revises: 
Create Date: 2025-09-08 16:11:04.763304

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'da58a5f71a6b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'ARCHIVED', name='projectstatus'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_table('content',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('content_type', sa.Enum('MEETING', 'EMAIL', name='contenttype'), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.Column('uploaded_by', sa.String(length=255), nullable=True),
    sa.Column('chunk_count', sa.Integer(), nullable=False),
    sa.Column('summary_generated', sa.Boolean(), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_content_content_type'), 'content', ['content_type'], unique=False)
    op.create_table('project_members',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.Column('added_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_project_members_email'), 'project_members', ['email'], unique=False)
    op.create_table('queries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.Column('sources', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('retrieved_chunks', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=False),
    sa.Column('token_count', sa.Integer(), nullable=True),
    sa.Column('embedding_time_ms', sa.Integer(), nullable=True),
    sa.Column('retrieval_time_ms', sa.Integer(), nullable=True),
    sa.Column('generation_time_ms', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('user_rating', sa.Integer(), nullable=True),
    sa.Column('user_feedback', sa.Text(), nullable=True),
    sa.Column('llm_cost_usd', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('summaries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('content_id', sa.UUID(), nullable=True),
    sa.Column('summary_type', sa.Enum('MEETING', 'WEEKLY', name='summarytype'), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('key_points', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('decisions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('action_items', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('date_range_start', sa.DateTime(), nullable=True),
    sa.Column('date_range_end', sa.DateTime(), nullable=True),
    sa.Column('token_count', sa.Integer(), nullable=True),
    sa.Column('generation_time_ms', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['content_id'], ['content.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_summaries_summary_type'), 'summaries', ['summary_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_summaries_summary_type'), table_name='summaries')
    op.drop_table('summaries')
    op.drop_table('queries')
    op.drop_index(op.f('ix_project_members_email'), table_name='project_members')
    op.drop_table('project_members')
    op.drop_index(op.f('ix_content_content_type'), table_name='content')
    op.drop_table('content')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_table('projects')
    # ### end Alembic commands ###
