input {
  # HTTP input for application logs
  http {
    host => "0.0.0.0"
    port => 8080
    codec => json
    type => "application"
  }

  # GELF input for Docker container logs
  gelf {
    port => 12201
    type => "docker"
  }

  # Beats input for Filebeat
  beats {
    port => 5044
    type => "filebeat"
  }
}

filter {
  # Parse JSON logs
  if [type] == "application" {
    # JSON is already parsed by the tcp input codec
    # Just add application-specific fields
    mutate {
      add_field => {
        "[@metadata][index_prefix]" => "pm-master-app"
        "index_prefix_debug" => "pm-master-app"
      }
    }
  }

  # Process Docker container logs
  if [type] == "docker" {
    mutate {
      add_field => {
        "[@metadata][index_prefix]" => "pm-master-docker"
      }
    }
    
    # Parse container name to extract service
    if [container_name] {
      mutate {
        add_field => { "service" => "%{container_name}" }
      }
      mutate {
        gsub => [ "service", "^/", "" ]
        gsub => [ "service", "^pm_master_", "" ]
      }
    }
  }

  # Process Filebeat logs
  if [type] == "filebeat" {
    mutate {
      add_field => {
        "[@metadata][index_prefix]" => "pm-master-filebeat"
      }
    }
  }

  # Common processing for all logs
  # Add timestamp if not present
  if ![timestamp] {
    mutate {
      add_field => { "timestamp" => "%{@timestamp}" }
    }
  }

  # Parse log level if present
  if [message] =~ /\b(DEBUG|INFO|WARN|WARNING|ERROR|FATAL)\b/ {
    grok {
      match => { 
        "message" => "(?<log_level>DEBUG|INFO|WARN|WARNING|ERROR|FATAL)"
      }
      tag_on_failure => []
    }
  }

  # Add PM Master specific metadata
  mutate {
    add_field => {
      "project" => "pm_master"
      "version" => "${PM_MASTER_VERSION:v2}"
    }
  }

  # Remove unnecessary fields
  mutate {
    remove_field => [ "host", "port" ]
  }
}

output {
  # Send to Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "%{[@metadata][index_prefix]}-%{+YYYY.MM.dd}"
    template_name => "pm-master"
    template => "/usr/share/logstash/templates/pm-master-template.json"
    template_overwrite => true
    manage_template => true
  }

  # Debug output (comment out in production)
  # stdout {
  #   codec => rubydebug
  # }

  # Optional: Send critical errors to a separate index
  if [log_level] == "ERROR" or [log_level] == "FATAL" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "pm-master-errors-%{+YYYY.MM.dd}"
    }
  }
}