// Mocks generated by Mockito 5.4.6 from annotations
// in pm_master_v2/test/mocks/generate_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pm_master_v2/features/auth/domain/auth_interface.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthResult_0 extends _i1.SmartFake implements _i2.AuthResult {
  _FakeAuthResult_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthInterface extends _i1.Mock implements _i2.AuthInterface {
  MockAuthInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i2.AuthStateChange> get authStateChanges =>
      (super.noSuchMethod(
            Invocation.getter(#authStateChanges),
            returnValue: _i3.Stream<_i2.AuthStateChange>.empty(),
          )
          as _i3.Stream<_i2.AuthStateChange>);

  @override
  _i3.Future<_i2.AuthResult> signUp({
    required String? email,
    required String? password,
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [], {
              #email: email,
              #password: password,
              #metadata: metadata,
            }),
            returnValue: _i3.Future<_i2.AuthResult>.value(
              _FakeAuthResult_0(
                this,
                Invocation.method(#signUp, [], {
                  #email: email,
                  #password: password,
                  #metadata: metadata,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.AuthResult>);

  @override
  _i3.Future<_i2.AuthResult> signIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i3.Future<_i2.AuthResult>.value(
              _FakeAuthResult_0(
                this,
                Invocation.method(#signIn, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.AuthResult>);

  @override
  _i3.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> resetPassword(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#resetPassword, [email]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i2.AuthResult> updatePassword(String? newPassword) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [newPassword]),
            returnValue: _i3.Future<_i2.AuthResult>.value(
              _FakeAuthResult_0(
                this,
                Invocation.method(#updatePassword, [newPassword]),
              ),
            ),
          )
          as _i3.Future<_i2.AuthResult>);

  @override
  _i3.Future<_i2.AuthResult> updateProfile({
    String? email,
    String? phone,
    Map<String, dynamic>? data,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #email: email,
              #phone: phone,
              #data: data,
            }),
            returnValue: _i3.Future<_i2.AuthResult>.value(
              _FakeAuthResult_0(
                this,
                Invocation.method(#updateProfile, [], {
                  #email: email,
                  #phone: phone,
                  #data: data,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.AuthResult>);

  @override
  _i3.Future<void> verifyOTP({
    required String? email,
    required String? token,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyOTP, [], {#email: email, #token: token}),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i2.AuthSession?> recoverSession() =>
      (super.noSuchMethod(
            Invocation.method(#recoverSession, []),
            returnValue: _i3.Future<_i2.AuthSession?>.value(),
          )
          as _i3.Future<_i2.AuthSession?>);
}
